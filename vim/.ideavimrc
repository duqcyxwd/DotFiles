" vim:fdm=marker:ts=4:sw=4:et:
"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|
"
" Chuan's .ideavimrc for IntelliJ

" Inspired from
"https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
"https://github.com/rekendahl/dotfiles/blob/master/.ideavimrc
" :actionlist
"Action List https://gist.github.com/zchee/9c78f91cc5ad771c1f5d

" Section: intelli-space Setting {{{1
" =================================================================
""" This file contains default spacemacs settings and key bindings
" Settings
set which-key
set timeoutlen=800

source ~/github/intelli-space/spacemacs/settings.vim

" Key bindings
source ~/github/intelli-space/spacemacs/applications.vim
source ~/github/intelli-space/spacemacs/buffers.vim
source ~/github/intelli-space/spacemacs/colors.vim
source ~/github/intelli-space/spacemacs/compile-comments.vim
source ~/github/intelli-space/spacemacs/errors.vim
source ~/github/intelli-space/spacemacs/files.vim
source ~/github/intelli-space/spacemacs/frame.vim
source ~/github/intelli-space/spacemacs/git-vcs.vim
source ~/github/intelli-space/spacemacs/help.vim
source ~/github/intelli-space/spacemacs/insertion.vim
source ~/github/intelli-space/spacemacs/jump-join-split.vim
" source ~/github/intelli-space/spacemacs/leader.vim
" source ~/github/intelli-space/extra/leader.vim {{{2
" =================================================================
" Execute an action. Like <M-x>
" nnoremap <leader><Space>    :action GotoAction<CR>
" vnoremap <leader><Space>    <Esc>:action GotoAction<CR>

" Focus last buffer
nnoremap <leader><tab>    :action VimFilePrevious<CR>
vnoremap <leader><tab>    <Esc>:action VimFilePrevious<CR>

" Open the terminal window (use :! for a single shell cmd)
nnoremap <leader>'    :action Terminal.OpenInTerminal<CR>
vnoremap <leader>'    <Esc>:action Terminal.OpenInTerminal<CR>

" Show usages for symbol.
" Ideally this should be FindInPath the current word, but I think that it is
" not possible.
nnoremap <leader>*    :action ShowUsages<CR>
vnoremap <leader>*    <Esc>:action ShowUsages<CR>

" Show key bindings
nnoremap <leader>?    :map<CR>
vnoremap <leader>?    <Esc>:map<CR>

" }}}
source ~/github/intelli-space/spacemacs/misc.vim
source ~/github/intelli-space/spacemacs/narrow-numbers.vim
source ~/github/intelli-space/spacemacs/projects.vim
source ~/github/intelli-space/spacemacs/quit.vim
source ~/github/intelli-space/spacemacs/registers-rings-resume.vim
source ~/github/intelli-space/spacemacs/search-symbol.vim
source ~/github/intelli-space/spacemacs/text.vim
source ~/github/intelli-space/spacemacs/toggles.vim
source ~/github/intelli-space/spacemacs/ui_toogles-themes.vim
source ~/github/intelli-space/spacemacs/windows.vim
source ~/github/intelli-space/spacemacs/zoom.vim


" Section: Extra {{{1
" =================================================================
" Key bindings
source ~/github/intelli-space/extra/applications.vim
source ~/github/intelli-space/extra/bookmarks.vim
source ~/github/intelli-space/extra/buffers.vim
source ~/github/intelli-space/extra/compile-comments.vim
source ~/github/intelli-space/extra/errors.vim
source ~/github/intelli-space/extra/files.vim
source ~/github/intelli-space/extra/frame.vim
source ~/github/intelli-space/extra/git-vcs.vim
source ~/github/intelli-space/extra/help-history.vim
source ~/github/intelli-space/extra/jump.vim
source ~/github/intelli-space/extra/leader.vim
source ~/github/intelli-space/extra/run.vim
source ~/github/intelli-space/extra/search.vim
source ~/github/intelli-space/extra/toggles.vim
source ~/github/intelli-space/extra/ui_toggles-themes.vim
source ~/github/intelli-space/extra/windows.vim

" Section: Major {{{1
" =================================================================
" This file contains the most common spacemacs major mode key bindings
source ~/github/intelli-space/major/compile.vim
source ~/github/intelli-space/major/debug.vim
source ~/github/intelli-space/major/go.vim
source ~/github/intelli-space/major/help-hierarchy.vim
source ~/github/intelli-space/major/leader.vim
source ~/github/intelli-space/major/projects.vim
source ~/github/intelli-space/major/refactoring.vim

" Section: Spacemacs hybrid mode. {{{1
" =================================================================

" Unbind C-g
nnoremap <C-g> <Esc>
vnoremap <C-g> <Esc>
inoremap <C-g> <Esc>a

" C-a goes to first character
nnoremap <C-a> ^
vnoremap <C-a> ^
inoremap <C-a> <Esc>I
cnoremap <C-a> <Home>

" C-e goes to end of line
nnoremap <C-e> $
vnoremap <C-e> $
inoremap <C-e> <Esc>A
cnoremap <C-e> <End>

" C-d deletes a character
inoremap <C-d> <del>

" C-p goes up
inoremap <C-p> <up>

" C-n goes down
inoremap <C-n> <down>

" Section: Personal {{{1
" =================================================================
" Config {{{2
" =================================================================
" ---------------
" Behaviors
" ---------------
syntax enable
set undolevels=100
set mps+=<:>
set autoread            " Automatically reload changes if detected
set timeoutlen=1000     " Time to wait for a command (after leader for example).
set notimeout

" ---------------
" UI
" ---------------
set background=dark
set ruler               " Ruler on
set number              " Line numbers on

set ignorecase smartcase
set scrolloff=3
set history=2000


" ---------------
" Ideavim only
" ---------------
set ideajoin " https://github.com/JetBrains/ideavim/wiki/%22ideajoin%22-examples
" <leader><leader>

" }}}
" Addition to intelli-space {{{2
" =================================================================

" Addition to extra/jump.vim
nnoremap <leader>jf   :action GotoFile<CR>
vnoremap <leader>jf   <Esc>:action GotoFile<CR>

" Addition to 'spacemacs/windows.vim'
nnoremap <leader>wu :action ReopenClosedTab<cr>

" Smart insert semicolon
" noremap <leader>; mqA;<Esc>`q
unoremap <leader>;;
unmap <leader>;;
uvnoremap <leader>;
noremap <leader>; mQA;<Esc>'Q


" hybrid.vim
" unnnoremap <C-a>
nnoremap <C-a> :action VimChangeNumberInc<CR>

" Other
nnoremap <leader>ss :action FileStructurePopup<CR>
vnoremap <leader>ss   <Esc>:action FileStructurePopup<CR>


" }}}
" Others {{{2
" =================================================================
" easy system clipboard copy/paste
noremap <space>y "*y
noremap <space>Y "*Y
noremap <space>p "*p
noremap <space>P "*P

"============= Navigation ===================
" easy window navigation
nnoremap gl <c-w>l
nnoremap gj <c-w>j
nnoremap gh <c-w>h
nnoremap gk <c-w>k

nmap <c-w>L :action MoveEditorToOppositeTabGroup<CR>
nmap gL :action MoveEditorToOppositeTabGroup<CR>
nmap gH :action MoveEditorToOppositeTabGroup<CR>

" Just to beginning and end of lines easier. From http://vimbits.com/bits/16
noremap H ^
noremap L $

" Swap implementations of ` and ' jump to markers
" By default, ' jumps to the marked line, ` jumps to the marked line and
" column, so swap them
nnoremap ' `
nnoremap ` '


" built-in navigation to navigated items works better
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>

" SPC f e R	 ?
" nnoremap <leader>R :source ~/.ideavimrc<cr>

" code navigation
" Go to
" nnoremap <leader>d :action GotoImplementation<cr>
nnoremap <leader>[ :action GotoSuperMethod<cr>

" Fold and unfold
nnoremap <CR> zc

nnoremap \a    :action RunAnything<CR>
nnoremap \A    :action SonarLint.AnalyzeChangedFiles<CR>
nnoremap \c    :action Compile<CR>
nnoremap \k    :action Stop<CR>
nnoremap \q    :action Refactorings.QuickListPopupAction<CR>
nnoremap \R    :action RunClass<CR>
nnoremap \r    :action Rerun<CR>
nnoremap \d    :action Debug<CR>
nnoremap \w    :action EditorToggleUseSoftWraps<CR>
nnoremap \d    :action com.github.setial.intellijjavadocs.action.JavaDocGenerateActionOnEditor<CR>
nnoremap \D    :action com.github.setial.intellijjavadocs.action.JavaDocsGenerateActionOnEditor<CR>
nnoremap \p    :action TogglePowerSave<CR>

nnoremap <leader>mcC      :action Compile<CR>

" Select configuration and run
nnoremap <leader>Rs  :action ChooseRunConfiguration<CR>
vnoremap <leader>Rs  <Esc>:action ChooseRunConfiguration<CR>

nnoremap <leader>mrd :action com.github.setial.intellijjavadocs.action.JavaDocGenerateActionOnEditor<CR>
nnoremap <leader>mrD :action com.github.setial.intellijjavadocs.action.JavaDocsGenerateActionOnEditor<CR>

noremap <leader>mR   :action Refactorings.QuickListPopupAction<CR>
noremap <leader>mrf  :action Refactorings.QuickListPopupAction<CR>
" noremap <leader>mrr  Rename
"
noremap <leader>gp  :action PinActiveTab<CR>
noremap <leader>tt  :action PinActiveTab<CR>

" noremap <leader>ee   :action :cursive.repl.actions/run-top-sexp<CR>
" noremap <leader>ec   :action :cursive.repl.actions/run-last-sexp<CR>


" code refactoring
" nnoremap <space>rn :action RenameElement<cr>
" nnoremap <leader>cc :action ReformatCode<CR>

"

" }}}
"
" Plugins {{{2
" =================================================================
Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tommcdo/vim-exchange'
Plug 'machakann/vim-highlightedyank'
set textobj-indent
set quickscope
" Plug 'michaeljsmith/vim-indent-object'


Plug 'easymotion/vim-easymotion'
" map <leader>F <Plug>(easymotion-s)

" TODO FIX THIS
" Emulates vim-multiple-cursors. Commands: <A-n>, <A-x>, <A-p>, g<A-n>
set multiple-cursors
" Plug 'terryma/vim-multiple-cursors'
nmap <C-n> <A-n>
xmap <C-n> <A-n>
vmap <C-n> <A-n>

nmap <C-x> <A-x>
xmap <C-x> <A-x>
vmap <C-x> <A-x>

nmap <C-p> <A-p>
xmap <C-p> <A-p>
vmap <C-p> <A-p>

  " e = {'Source current file!',              ':so %<CR>'},
  " v = {'Source vimrc',                      ':so $XDG_CONFIG_HOME/nvim/init.vim<CR>'},


" Add text object for function arguments: aa (around argument), ia (inside argument)
" Plug 'vim-scripts/argtextobj.vim'
set argtextobj

" Add text object for entire buffer: ae (around buffer), ie (inside buffer)
set textobj-entire

nnoremap <leader>se    :action IdeaVim.ReloadVimRc.reload<CR>
nnoremap <leader>sv    :action IdeaVim.ReloadVimRc.reload<CR>
nnoremap <leader>fei   :e ~/.ideavimrc<CR>
nnoremap <leader>zz    :action ToggleDistractionFreeMode<CR>
nnoremap <leader>`     :action ActivateTerminalToolWindow<CR>


nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

sethandler <c-x> a:vim

" WIP
nnoremap <Leader>=  :action ReformatCode<CR>
nnoremap <leader>o :action OptimizeImports<CR>

nnoremap gb :action Back<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gf :action Forward<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gr :action GotoRelated<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gu :action FindUsages<CR>

nnoremap <leader><Esc> :action JumpToLastWindow<CR>
" nnoremap <leader><Esc> :action HideAllWindows<CR>

" nnoremap ,r :action ContextRun<CR>
" nnoremap ,c :action RunClass<CR>
" nnoremap ,f :action ChooseRunConfiguration<CR>
" nnoremap ,t :action ActivateRunToolWindow<CR>
" nnoremap ,u :action Rerun<CR>
" nnoremap ,b :action ToggleLineBreakpoint<CR>
" nnoremap ,d :action ContextDebug<CR>
" nnoremap ,n :action ActivateDebugToolWindow<CR>
" Some example: https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b
